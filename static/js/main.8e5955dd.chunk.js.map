{"version":3,"sources":["fetcher.js","App.js","index.js"],"names":["fetcher","url","a","axios","get","data","columns","name","selector","sortable","format","row","dayjs","baseUrl","App","useState","input","setInput","repo","setRepo","page","setPage","rowPerPage","setRowPerPage","sortBy","setSortBy","sortDirection","setSortDirection","resetPaginationToggle","setResetPaginationToggle","key","useMemo","useSWR","issueData","issueError","error","repoData","repoError","className","value","onChange","event","target","placeholder","onClick","val","response","message","title","persistTableHead","highlightOnHover","sortServer","onSort","column","direction","pagination","paginationResetDefaultPage","paginationTotalRows","open_issues_count","paginationServer","onChangePage","onChangeRowsPerPage","rowsPerPage","progressPending","progressComponent","style","width","LinearProgress","position","bottom","href","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mUAEaA,EAAO,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACEC,IAAMC,IAAIH,GADZ,uBACbI,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,sD,OCMdC,EAAU,CACd,CACEC,KAAM,SACNC,SAAU,UAEZ,CACED,KAAM,QACNC,SAAU,SAEZ,CACED,KAAM,aACNC,SAAU,aACVC,UAAU,EACVC,OAAQ,SAACC,GAAD,OAASC,IAAMD,EAAG,YAAgBD,OAAO,yBAEnD,CACEH,KAAM,WACNC,SAAU,WACVC,UAAU,IAIRI,EAAU,+BAGD,SAASC,IAAO,IAAD,IAC5B,EAA0BC,mBAAS,kBAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAASC,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAA4BR,mBAAS,cAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAA0CV,mBAAS,QAAnD,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAA0DZ,oBAAS,GAAnE,mBAAOa,EAAP,KAA8BC,EAA9B,KAEMC,EAAMC,mBAAQ,WAClB,MAAM,GAAN,OAAUlB,EAAV,YAAqBK,EAArB,wBAAyCE,EAAzC,qBAA0DE,EAA1D,iBAA6EE,EAA7E,sBAAiGE,KAChG,CAACR,EAAME,EAAME,EAAYE,EAAQE,IAGpC,EAA+CM,YAAOF,EAAK9B,GAA7CiC,EAAd,EAAQ5B,KAAwB6B,EAAhC,EAAyBC,MAGzB,EAA6CH,YAAO,GAAD,OAAInB,EAAJ,YAAeK,GAAQlB,GAA5DoC,EAAd,EAAQ/B,KAAuBgC,EAA/B,EAAwBF,MAExB,OACE,sBAAKG,UAAU,MAAf,UACE,mEACA,uBACEC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAWxB,EAASwB,EAAMC,OAAOH,QAC3CI,YAAY,mBAEd,wBACEC,QAAS,WACPzB,EAAQH,GACRa,GAAyB,SAACgB,GAAD,OAAUA,MAHvC,yBAMCX,GAAcG,EACb,qCACE,gGACA,iDACA,qCAAOH,QAAP,IAAOA,GAAP,UAAOA,EAAYY,gBAAnB,iBAAO,EAAsBzC,YAA7B,aAAO,EAA4B0C,aAGrC,cAAC,IAAD,CACEC,MAAK,UAAK9B,EAAL,sBACLZ,QAASA,EACTD,KAAM4B,EACNgB,kBAAgB,EAChBC,kBAAgB,EAChBC,YAAU,EACVC,OAAQ,SAACC,EAAQC,GACf7B,EAAU4B,EAAO7C,UACjBmB,EAAiB2B,IAEnBC,YAAU,EACVC,4BAA6B5B,EAC7B6B,oBAAmB,OAAErB,QAAF,IAAEA,OAAF,EAAEA,EAAUsB,kBAC/BC,kBAAgB,EAChBC,aAAc,SAACxC,GAAD,OAAUC,EAAQD,IAChCyC,oBAAqB,SAACC,GAAD,OAAiBvC,EAAcuC,IACpDC,iBAAkB9B,IAAcG,EAChC4B,kBACE,qBAAKC,MAAO,CAAEC,MAAO,QAArB,SACE,cAACC,EAAA,EAAD,QAKR,qBAAKF,MAAO,CAAEG,SAAU,QAASC,OAAQ,GAAzC,SACE,mBAAGC,KAAK,8DAAR,SACE,qDC/FV,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC7D,EAAD,MAEFyD,K","file":"static/js/main.8e5955dd.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const fetcher = async (url) => {\n  const { data } = await axios.get(url);\n  return data;\n};\n","import \"./styles.css\";\nimport useSWR from \"swr\";\nimport DataTable from \"react-data-table-component\";\nimport { LinearProgress } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport { fetcher } from \"./fetcher\";\nimport { useMemo, useState } from \"react\";\n\nconst columns = [\n  {\n    name: \"Number\",\n    selector: \"number\"\n  },\n  {\n    name: \"Title\",\n    selector: \"title\"\n  },\n  {\n    name: \"Created At\",\n    selector: \"created_at\",\n    sortable: true,\n    format: (row) => dayjs(row[\"created_at\"]).format(\"YYYY/MM/DD HH:mm:ss\")\n  },\n  {\n    name: \"Comments\",\n    selector: \"comments\",\n    sortable: true,\n  }\n];\n\nconst baseUrl = \"https://api.github.com/repos\";\n// api doc: https://docs.github.com/en/rest/reference/issues#list-issues-assigned-to-the-authenticated-user--parameters\n\nexport default function App() {\n  const [input, setInput] = useState(\"facebook/react\")\n  const [repo, setRepo] = useState(input)\n  const [page, setPage] = useState(1);\n  const [rowPerPage, setRowPerPage] = useState(10);\n  const [sortBy, setSortBy] = useState(\"created_at\");\n  const [sortDirection, setSortDirection] = useState(\"desc\");\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(true)\n\n  const key = useMemo(() => {\n    return `${baseUrl}/${repo}/issues?page=${page}&per_page=${rowPerPage}&sort=${sortBy}&direction=${sortDirection}`;\n  }, [repo, page, rowPerPage, sortBy, sortDirection]);\n\n  // fetch Issues\n  const { data: issueData, error: issueError } = useSWR(key, fetcher);\n\n  // fetch repo info to get the total open issues count\n  const { data: repoData, error: repoError } = useSWR(`${baseUrl}/${repo}`, fetcher);\n\n  return (\n    <div className=\"App\">\n      <pre>react-data-table-component + SWR</pre>\n      <input\n        value={input}\n        onChange={(event) => setInput(event.target.value)}\n        placeholder=\"facebook/react\"\n      />\n      <button\n        onClick={() => {\n          setRepo(input);\n          setResetPaginationToggle((val) => !val)\n        }}\n      >Load Issues</button>\n      {issueError || repoError ? (\n        <>\n          <h1>An error has occurred, please make sure the repository exists.</h1>\n          <pre>error message:</pre>\n          <pre>{ issueError?.response?.data?.message }</pre>\n        </>\n      ) : (\n        <DataTable\n          title={`${repo} GitHub Issue List`}\n          columns={columns}\n          data={issueData}\n          persistTableHead\n          highlightOnHover\n          sortServer\n          onSort={(column, direction) => {\n            setSortBy(column.selector);\n            setSortDirection(direction);\n          }}\n          pagination\n          paginationResetDefaultPage={!resetPaginationToggle}\n          paginationTotalRows={repoData?.open_issues_count}\n          paginationServer\n          onChangePage={(page) => setPage(page)}\n          onChangeRowsPerPage={(rowsPerPage) => setRowPerPage(rowsPerPage)}\n          progressPending={!issueData || !repoData}\n          progressComponent={\n            <div style={{ width: \"100%\" }}>\n              <LinearProgress />\n            </div>\n          }\n        />\n      )}\n      <div style={{ position: 'fixed', bottom: 0 }}>\n        <a href=\"https://github.com/Uier/react-data-table-component-with-swr\">\n          <pre>GitHub Repo</pre>\n        </a>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}